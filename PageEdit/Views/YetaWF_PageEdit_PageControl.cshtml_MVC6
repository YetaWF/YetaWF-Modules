@*Copyright © 2018 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/PageEdit#License*@
@inherits YetaWF.Core.Views.RazorView<YetaWF.Modules.PageEdit.Modules.PageControlModule, YetaWF.Modules.PageEdit.Controllers.PageControlModuleController.PageControlModel>
@using YetaWF.Core.Modules
@using YetaWF.Core.Menus
<div id="@DivId">
    @Html.RenderTabStripStart(DivId)
    @{ int tabEntry = 0; }
    @if (Model.EditAuthorized) {
        @Html.RenderTabEntry(DivId, __ResStr("tabNewPage", "New Page"), __ResStr("tabNewPageTT", "Add a new page to the site"), tabEntry)
        ++tabEntry;
    }
    @if (!Manager.CurrentPage.Temporary) {
        if (Model.EditAuthorized) {
            @Html.RenderTabEntry(DivId, __ResStr("tabNew", "New Module"), __ResStr("tabNewTT", "Add a new module to this page (creates a new module)"), tabEntry)
            ++tabEntry;
            if (await ModuleSelectionHelper.ExistingModulesExistAsync()) {
                @Html.RenderTabEntry(DivId, __ResStr("tabOld", "Existing Module"), __ResStr("tabOldTT", "Add an existing module to this page (this does not copy the module)"), tabEntry)
                ++tabEntry;
            }
            @Html.RenderTabEntry(DivId, __ResStr("tabImport", "Import"), __ResStr("tabImportTT", "Import module data into this page (creates a new module)"), tabEntry)
            ++tabEntry;
            @Html.RenderTabEntry(DivId, __ResStr("tabSkins", "Skins"), __ResStr("tabSkinsTT", "Change default skins used site wide"), tabEntry)
            ++tabEntry;
        }
        @Html.RenderTabEntry(DivId, __ResStr("tabLogin", "Login"), __ResStr("tabLoginTT", "Change site or log in as another user"), tabEntry)
        ++tabEntry;
    }
    @Html.RenderTabStripEnd(DivId)

    @{ int panel = 0; }
    @if (Model.EditAuthorized) {
        @Html.RenderTabPaneStart(DivId, panel, "t_addNewPage")
        using (Form("AddNewPage_Partial", Model: Model.AddNewPageModel)) {
            @PartialForm()
            <div>
                <input type="submit" value="@__ResStr("addNewPage", "Add")" />
            </div>
        }
        @Html.RenderTabPaneEnd(DivId, panel)
        ++panel;
    }
    @if (!Manager.CurrentPage.Temporary) {
        if (Model.EditAuthorized) {
            @Html.RenderTabPaneStart(DivId, panel, "t_addNewMod")
            using (Form("AddNewModule_Partial", Model: Model.AddNewModel)) {
                @PartialForm()
                <div>
                    <input type="submit" value="@__ResStr("addNewModule", "Add")" />
                </div>
            }
            @Html.RenderTabPaneEnd(DivId, panel)
            ++panel;

            if (await ModuleSelectionHelper.ExistingModulesExistAsync()) {
                @Html.RenderTabPaneStart(DivId, panel, "t_addExistingMod")
                using (Form("AddExistingModule_Partial", Model: Model.AddExistingModel)) {
                    @PartialForm()
                    <div>
                        <input type="submit" value="@__ResStr("addOldModule", "Add")" />
                    </div>
                }
                @Html.RenderTabPaneEnd(DivId, panel)
                ++panel;
            }

            @Html.RenderTabPaneStart(DivId, panel, "t_importMod")
            using (Form("ImportModule_Partial", Model: Model.ImportModel)) {
                @PartialForm()
            }
            @Html.RenderTabPaneEnd(DivId, panel)
            ++panel;

            @Html.RenderTabPaneStart(DivId, panel, "t_addSkins")
            using (Form("SkinSelection_Partial", Model: Model.SkinSelectionModel)) {
                @PartialForm()
                <div>
                    <input type="submit" value="@__ResStr("saveSkins", "Save & Display")" />
                </div>
            }
            @Html.RenderTabPaneEnd(DivId, panel)
            ++panel;
        }
        @Html.RenderTabPaneStart(DivId, panel, "t_Login")
        using (Form("LoginSiteSelection_Partial", Model: Model.LoginSiteSelectionModel)) {
            @PartialForm()
        }
        @Html.RenderTabPaneEnd(DivId, panel)
        ++panel;
    }
</div>
@await Html.RenderTabInitAsync(DivId)