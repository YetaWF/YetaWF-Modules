{"version":3,"sources":["Addons/YetaWF/Menus/_Addons/MenuEdit/MenuEdit.ts"],"names":[],"mappings":"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","file":"MenuEdit.d.ts","sourcesContent":["/* Copyright ï¿½ 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Menus#License */\r\n\r\nnamespace YetaWF {\r\n    export interface ILocs {\r\n        YetaWF_Menus: YetaWF_Menus.IPackageLocs;\r\n    }\r\n}\r\n\r\nnamespace YetaWF_Menus {\r\n\r\n    export interface IPackageLocs {\r\n        ChangedEntry: string;\r\n        NewEntry: string;\r\n    }\r\n\r\n    enum MenuEntryType {\r\n        Entry = 0,\r\n        Parent = 1,\r\n        Separator = 2\r\n    }\r\n    interface Data {\r\n        EntryType: MenuEntryType;\r\n        Text: string;\r\n        Url: string;\r\n        SubModule: string;\r\n        MenuText: object;\r\n        LinkText: object;\r\n        ImageUrlFinal: string;\r\n        Tooltip: object;\r\n        Legend: object;\r\n        Enabled: boolean;\r\n        CssClass: string;\r\n        Style: number;\r\n        Mode: number;\r\n        Category: number;\r\n        LimitToRole: number;\r\n        AuthorizationIgnore: boolean;\r\n        ConfirmationText: object;\r\n        PleaseWaitText: object;\r\n        SaveReturnUrl: boolean;\r\n        AddToOriginList: boolean;\r\n        NeedsModuleContext: boolean;\r\n        DontFollow: boolean;\r\n    }\r\n    interface DataHierarchy extends Data {\r\n        SubMenu: DataHierarchy[] | null;\r\n    }\r\n    interface SendResult {\r\n        NewVersion: number;\r\n    }\r\n\r\n    interface Setup {\r\n        TreeId: string;\r\n        DetailsId: string;\r\n        AjaxUrl: string;\r\n        NewEntry: Data;\r\n    }\r\n\r\n    export class MenuEditView {\r\n\r\n        private Setup: Setup;\r\n\r\n        private Tree: YetaWF_ComponentsHTML.TreeComponent;\r\n        private Details: HTMLDivElement;\r\n\r\n        private ActiveEntry: HTMLLIElement | null;\r\n        private ActiveData: Data | null;\r\n        private ActiveNew: boolean = false;\r\n\r\n        private EntryType!: YetaWF_ComponentsHTML.DropDownListEditComponent;\r\n        private Url!: YetaWF_ComponentsHTML.UrlEditComponent;\r\n        private SubModule!: YetaWF_ComponentsHTML.ModuleSelectionEditComponent;\r\n        private MenuText!: YetaWF_ComponentsHTML.MultiStringEditComponent;\r\n        private LinkText!: YetaWF_ComponentsHTML.MultiStringEditComponent;\r\n        private ImageUrlFinal!: HTMLInputElement;\r\n        private Tooltip!: YetaWF_ComponentsHTML.MultiStringEditComponent;\r\n        private Legend!: YetaWF_ComponentsHTML.MultiStringEditComponent;\r\n        private Enabled!: HTMLInputElement;\r\n        private CssClass!: HTMLInputElement;\r\n        private Style!: YetaWF_ComponentsHTML.DropDownListEditComponent;\r\n        private Mode!: YetaWF_ComponentsHTML.DropDownListEditComponent;\r\n        private Category!: YetaWF_ComponentsHTML.DropDownListEditComponent;\r\n        private LimitToRole!: YetaWF_ComponentsHTML.DropDownListEditComponent;\r\n        private AuthorizationIgnore!: HTMLInputElement;\r\n        private ConfirmationText!: YetaWF_ComponentsHTML.MultiStringEditComponent;\r\n        private PleaseWaitText!: YetaWF_ComponentsHTML.MultiStringEditComponent;\r\n        private SaveReturnUrl!: HTMLInputElement;\r\n        private AddToOriginList!: HTMLInputElement;\r\n        private NeedsModuleContext!: HTMLInputElement;\r\n        private DontFollow!: HTMLInputElement;\r\n\r\n        private SaveButton: HTMLInputElement;\r\n        private ResetButton: HTMLInputElement;\r\n        private AddButton: HTMLInputElement;\r\n        private InsertButton: HTMLInputElement;\r\n        private DeleteButton: HTMLInputElement;\r\n        private ExpandAllButton: HTMLInputElement;\r\n        private CollapseAllButton: HTMLInputElement;\r\n\r\n        constructor(setup: Setup) {\r\n            this.Setup = setup;\r\n\r\n            var treeTag = $YetaWF.getElement1BySelector(`#${this.Setup.TreeId} ${YetaWF_ComponentsHTML.TreeComponent.SELECTOR}`);\r\n            this.Tree = YetaWF.ComponentBaseDataImpl.getControlFromTag<YetaWF_ComponentsHTML.TreeComponent>(treeTag, YetaWF_ComponentsHTML.TreeComponent.SELECTOR);\r\n            this.Details = $YetaWF.getElementById(this.Setup.DetailsId) as HTMLDivElement;\r\n\r\n            this.getFormControls();\r\n\r\n            this.SaveButton = $YetaWF.getElement1BySelector(\"input[name='t_submit']\", [this.Details]) as HTMLInputElement;\r\n            this.ResetButton = $YetaWF.getElement1BySelector(\"input[name='t_reset']\", [this.Details]) as HTMLInputElement;\r\n            this.AddButton = $YetaWF.getElement1BySelector(\"input[name='t_add']\", [this.Details]) as HTMLInputElement;\r\n            this.InsertButton = $YetaWF.getElement1BySelector(\"input[name='t_insert']\", [this.Details]) as HTMLInputElement;\r\n            this.DeleteButton = $YetaWF.getElement1BySelector(\"input[name='t_delete']\", [this.Details]) as HTMLInputElement;\r\n            this.ExpandAllButton = $YetaWF.getElement1BySelector(\"input[name='t_expandall']\", [this.Details]) as HTMLInputElement;\r\n            this.CollapseAllButton = $YetaWF.getElement1BySelector(\"input[name='t_collapseall']\", [this.Details]) as HTMLInputElement;\r\n\r\n            this.Tree.Control.addEventListener(\"tree_click\", (evt: Event): void => {\r\n                this.changeSelection();\r\n            });\r\n            this.Tree.Control.addEventListener(\"tree_select\", (evt: Event): void => {\r\n                this.changeSelection();\r\n            });\r\n            this.Tree.Control.addEventListener(\"tree_drop\", (evt: Event): void => {\r\n                this.sendEntireMenu();\r\n            });\r\n\r\n            $YetaWF.registerEventHandler(this.AddButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                if (this.ActiveEntry && this.changeSelection()) {\r\n                    var li = this.Tree.addEntry(this.ActiveEntry, this.Setup.NewEntry.Text, this.Setup.NewEntry);\r\n                    this.Tree.setSelect(li);\r\n                    this.ActiveEntry = this.Tree.getSelect();\r\n                    this.ActiveData = this.Tree.getSelectData();\r\n                    this.ActiveNew = true;\r\n                    this.update();\r\n                }\r\n                return false;\r\n            });\r\n            $YetaWF.registerEventHandler(this.InsertButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                if (this.ActiveEntry && this.changeSelection()) {\r\n                    var li = this.Tree.insertEntry(this.ActiveEntry, this.Setup.NewEntry.Text, this.Setup.NewEntry);\r\n                    this.Tree.setSelect(li);\r\n                    this.ActiveEntry = this.Tree.getSelect();\r\n                    this.ActiveData = this.Tree.getSelectData();\r\n                    this.ActiveNew = true;\r\n                    this.update();\r\n                }\r\n                return false;\r\n            });\r\n\r\n            $YetaWF.registerEventHandler(this.SaveButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                var form = $YetaWF.Forms.getForm(this.Details);\r\n                $YetaWF.Forms.submit(form, true, \"ValidateCurrent=true\", (hasErrors: boolean): void => {\r\n                    this.getFormControls();\r\n                    if (!hasErrors) {\r\n                        this.saveFields();\r\n                        this.Tree.setSelectText(this.MenuText.defaultValue);\r\n\r\n                        this.sendEntireMenu();\r\n                        this.update();\r\n                    }\r\n                });\r\n                return false;\r\n            });\r\n            $YetaWF.registerEventHandler(this.DeleteButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                if (this.ActiveEntry) {\r\n                    if (this.Tree.canCollapse(this.ActiveEntry))\r\n                        this.Tree.collapse(this.ActiveEntry);\r\n                    var next = this.Tree.getNextVisibleEntry(this.ActiveEntry);\r\n                    if (!next)\r\n                        next = this.Tree.getPrevVisibleEntry(this.ActiveEntry);\r\n                    this.Tree.removeEntry(this.ActiveEntry);\r\n                    if (next) {\r\n                        this.Tree.setSelect(next);\r\n                    } else {\r\n                        this.Tree.clearSelect();\r\n                    }\r\n                    this.ActiveEntry = this.Tree.getSelect();\r\n                    this.ActiveData = this.Tree.getSelectData();\r\n                    this.ActiveNew = false;\r\n\r\n                    this.sendEntireMenu();\r\n                    this.update();\r\n                }\r\n                return false;\r\n            });\r\n\r\n            $YetaWF.registerEventHandler(this.ExpandAllButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                this.Tree.expandAll();\r\n                return false;\r\n            });\r\n            $YetaWF.registerEventHandler(this.CollapseAllButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                if (this.changeSelection()) {\r\n                    this.Tree.collapseAll();\r\n                    var li = this.Tree.getFirstVisibleItem();\r\n                    if (li) {\r\n                        // this.Tree.expand(li);\r\n                        this.Tree.setSelect(li);\r\n                        this.ActiveEntry = this.Tree.getSelect();\r\n                        this.ActiveData = this.Tree.getSelectData();\r\n                        this.ActiveNew = false;\r\n                    }\r\n                    this.update();\r\n                }\r\n                return false;\r\n            });\r\n            $YetaWF.registerEventHandler(this.ResetButton, \"click\", null, (ev: MouseEvent): boolean => {\r\n                this.update();\r\n                return false;\r\n            });\r\n\r\n            this.EntryType.Control.addEventListener(\"dropdownlist_change\", (ev: Event): void => {\r\n                var data = this.Tree.getSelectData() as Data | null;\r\n                if (data)\r\n                    data.EntryType = Number(this.EntryType.value);\r\n                this.update();\r\n            });\r\n\r\n            this.ActiveEntry = this.Tree.getSelect();\r\n            this.ActiveData = this.Tree.getSelectData();\r\n            this.ActiveNew = false;\r\n            this.update();\r\n        }\r\n\r\n        private buildHierarchy(): DataHierarchy[] {\r\n            var hierarchy: DataHierarchy[] = [];\r\n\r\n            var liElem = this.Tree.getFirstVisibleItem();\r\n            if (liElem)\r\n                this.addHierarchyEntry(hierarchy, liElem);\r\n\r\n            return hierarchy;\r\n        }\r\n        private addHierarchyEntry(hierarchy: DataHierarchy[], liElem: HTMLLIElement): void {\r\n\r\n            for (; ;) {\r\n                var data = this.Tree.getElementData(liElem);\r\n                var h = data as DataHierarchy;\r\n                h.SubMenu = [];\r\n                hierarchy.push(h);\r\n\r\n                // child elems\r\n                var childLi = this.Tree.getFirstDirectChild(liElem);\r\n                if (childLi)\r\n                    this.addHierarchyEntry(h.SubMenu, childLi);\r\n\r\n                var li = this.Tree.getNextSibling(liElem);\r\n                if (!li)\r\n                    break;\r\n                liElem = li;\r\n            }\r\n        }\r\n\r\n        private getFormControls(): void {\r\n            this.EntryType = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select[name='ModAction.EntryType']\", YetaWF_ComponentsHTML.DropDownListEditComponent.SELECTOR, [this.Details]);\r\n            this.Url = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.Url']\", YetaWF_ComponentsHTML.UrlEditComponent.SELECTOR, [this.Details]);\r\n            this.SubModule = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select[name='ModAction.SubModule']\", YetaWF_ComponentsHTML.ModuleSelectionEditComponent.SELECTOR, [this.Details]);\r\n            this.MenuText = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.MenuText']\", YetaWF_ComponentsHTML.MultiStringEditComponent.SELECTOR, [this.Details]);\r\n            this.LinkText = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.LinkText']\", YetaWF_ComponentsHTML.MultiStringEditComponent.SELECTOR, [this.Details]);\r\n            this.ImageUrlFinal = $YetaWF.getElement1BySelector(\"input[name='ModAction.ImageUrlFinal']\", [this.Details]) as HTMLInputElement;\r\n            this.Tooltip = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.Tooltip']\", YetaWF_ComponentsHTML.MultiStringEditComponent.SELECTOR, [this.Details]);\r\n            this.Legend = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.Legend']\", YetaWF_ComponentsHTML.MultiStringEditComponent.SELECTOR, [this.Details]);\r\n            this.Enabled = $YetaWF.getElement1BySelector(\"input[name='ModAction.Enabled']\", [this.Details]) as HTMLInputElement;\r\n            this.CssClass = $YetaWF.getElement1BySelector(\"input[name='ModAction.CssClass']\", [this.Details]) as HTMLInputElement;\r\n            this.Style = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select[name='ModAction.Style']\", YetaWF_ComponentsHTML.DropDownListEditComponent.SELECTOR, [this.Details]);\r\n            this.Mode = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select[name='ModAction.Mode']\", YetaWF_ComponentsHTML.DropDownListEditComponent.SELECTOR, [this.Details]);\r\n            this.Category = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select[name='ModAction.Category']\", YetaWF_ComponentsHTML.DropDownListEditComponent.SELECTOR, [this.Details]);\r\n            this.LimitToRole = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select[name='ModAction.LimitToRole']\", YetaWF_ComponentsHTML.DropDownListEditComponent.SELECTOR, [this.Details]);\r\n            this.AuthorizationIgnore = $YetaWF.getElement1BySelector(\"input[name='ModAction.AuthorizationIgnore']\", [this.Details]) as HTMLInputElement;\r\n            this.ConfirmationText = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.ConfirmationText']\", YetaWF_ComponentsHTML.MultiStringEditComponent.SELECTOR, [this.Details]);\r\n            this.PleaseWaitText = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"input[name='ModAction.PleaseWaitText']\", YetaWF_ComponentsHTML.MultiStringEditComponent.SELECTOR, [this.Details]);\r\n            this.SaveReturnUrl = $YetaWF.getElement1BySelector(\"input[name='ModAction.SaveReturnUrl']\", [this.Details]) as HTMLInputElement;\r\n            this.AddToOriginList = $YetaWF.getElement1BySelector(\"input[name='ModAction.AddToOriginList']\", [this.Details]) as HTMLInputElement;\r\n            this.NeedsModuleContext = $YetaWF.getElement1BySelector(\"input[name='ModAction.NeedsModuleContext']\", [this.Details]) as HTMLInputElement;\r\n            this.DontFollow = $YetaWF.getElement1BySelector(\"input[name='ModAction.DontFollow']\", [this.Details]) as HTMLInputElement;\r\n        }\r\n\r\n        private changeSelection(): boolean {\r\n            if (this.ActiveNew) {\r\n                if (this.ActiveEntry)// restore original selection\r\n                    this.Tree.setSelect(this.ActiveEntry);\r\n                $YetaWF.alert(YLocs.YetaWF_Menus.NewEntry);\r\n                return false;\r\n            }\r\n            if (this.hasChanged()) {\r\n                if (this.ActiveEntry)// restore original selection\r\n                    this.Tree.setSelect(this.ActiveEntry);\r\n                $YetaWF.alert(YLocs.YetaWF_Menus.ChangedEntry);\r\n                return false;\r\n            }\r\n            // set new selection\r\n            if (this.ActiveEntry !== this.Tree.getSelect()) {\r\n                this.ActiveEntry = this.Tree.getSelect();\r\n                this.ActiveData = this.Tree.getSelectData();\r\n                this.ActiveNew = false;\r\n                this.update();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        private hasChanged(): boolean {\r\n            if (this.ActiveEntry && this.ActiveData) {\r\n                var data = this.ActiveData;\r\n                if (Number(this.EntryType.value) !== data.EntryType) return true;\r\n                if (!$YetaWF.stringCompare(this.Url.value, data.Url)) return true;\r\n                if (!$YetaWF.stringCompare(this.SubModule.value, data.SubModule)) return true;\r\n                if (this.MenuText.hasChanged(data.MenuText)) return true;\r\n                if (this.LinkText.hasChanged(data.LinkText)) return true;\r\n                if (!$YetaWF.stringCompare(this.ImageUrlFinal.value, data.ImageUrlFinal)) return true;\r\n                if (this.Tooltip.hasChanged(data.Tooltip)) return true;\r\n                if (this.Legend.hasChanged(data.Legend)) return true;\r\n                if (this.Enabled.checked !== data.Enabled) return true;\r\n                if (!$YetaWF.stringCompare(this.CssClass.value, data.CssClass)) return true;\r\n                if (Number(this.Style.value) !== data.Style) return true;\r\n                if (Number(this.Mode.value) !== data.Mode) return true;\r\n                if (Number(this.Category.value) !== data.Category) return true;\r\n                if (Number(this.LimitToRole.value) !== data.LimitToRole) return true;\r\n                if (this.AuthorizationIgnore.checked !== data.AuthorizationIgnore) return true;\r\n                if (this.ConfirmationText.hasChanged(data.ConfirmationText)) return true;\r\n                if (this.PleaseWaitText.hasChanged(data.PleaseWaitText)) return true;\r\n                if (this.SaveReturnUrl.checked !== data.SaveReturnUrl) return true;\r\n                if (this.AddToOriginList.checked !== data.AddToOriginList) return true;\r\n                if (this.NeedsModuleContext.checked !== data.NeedsModuleContext) return true;\r\n                if (this.DontFollow.checked !== data.DontFollow) return true;\r\n            }\r\n            return false;\r\n        }\r\n        private saveFields(): void {\r\n            if (!this.ActiveData) return;\r\n            var data = this.ActiveData;\r\n            data.EntryType = Number(this.EntryType.value);\r\n            data.Url = this.Url.value;\r\n            data.SubModule = this.SubModule.value;\r\n            data.MenuText = this.MenuText.value;\r\n            data.LinkText = this.LinkText.value;\r\n            data.ImageUrlFinal = this.ImageUrlFinal.value;\r\n            data.Tooltip = this.Tooltip.value;\r\n            data.Legend = this.Legend.value;\r\n            data.Enabled = this.Enabled.checked;\r\n            data.CssClass = this.CssClass.value;\r\n            data.Style = Number(this.Style.value);\r\n            data.Mode = Number(this.Mode.value);\r\n            data.Category = Number(this.Category.value);\r\n            data.LimitToRole = Number(this.LimitToRole.value);\r\n            data.AuthorizationIgnore = this.AuthorizationIgnore.checked;\r\n            data.ConfirmationText = this.ConfirmationText.value;\r\n            data.PleaseWaitText = this.PleaseWaitText.value;\r\n            data.SaveReturnUrl = this.SaveReturnUrl.checked;\r\n            data.AddToOriginList = this.AddToOriginList.checked;\r\n            data.NeedsModuleContext = this.NeedsModuleContext.checked;\r\n            data.DontFollow = this.DontFollow.checked;\r\n        }\r\n\r\n        private update(): void {\r\n            var data = this.Tree.getSelectData() as Data | null;\r\n            if (data) {\r\n                this.EntryType.value = data.EntryType.toString();\r\n                this.Url.value = data.Url;\r\n                this.SubModule.updateComplete(data.SubModule);\r\n                this.MenuText.value = data.MenuText;\r\n                this.LinkText.value = data.LinkText;\r\n                this.ImageUrlFinal.value = data.ImageUrlFinal;\r\n                this.Tooltip.value = data.Tooltip;\r\n                this.Legend.value = data.Legend;\r\n                this.Enabled.checked = data.Enabled;\r\n                this.CssClass.value = data.CssClass;\r\n                this.Style.value = data.Style.toString();\r\n                this.Mode.value = data.Mode.toString();\r\n                this.Category.value = data.Category.toString();\r\n                this.LimitToRole.value = data.LimitToRole.toString();\r\n                this.AuthorizationIgnore.checked = data.AuthorizationIgnore;\r\n                this.ConfirmationText.value = data.ConfirmationText;\r\n                this.PleaseWaitText.value = data.PleaseWaitText;\r\n                this.SaveReturnUrl.checked = data.SaveReturnUrl;\r\n                this.AddToOriginList.checked = data.AddToOriginList;\r\n                this.NeedsModuleContext.checked = data.NeedsModuleContext;\r\n                this.DontFollow.checked = data.DontFollow;\r\n                this.enableFields(true);\r\n            } else {\r\n                this.EntryType.value = MenuEntryType.Entry.toString();\r\n                this.Url.value = \"\";\r\n                this.SubModule.clear();\r\n                this.MenuText.clear();\r\n                this.LinkText.clear();\r\n                this.ImageUrlFinal.value = \"\";\r\n                this.Tooltip.clear();\r\n                this.Legend.clear();\r\n                this.Enabled.checked = false;\r\n                this.CssClass.value = \"\";\r\n                this.Style.value = \"\";\r\n                this.Mode.value = \"\";\r\n                this.Category.value = \"\";\r\n                this.LimitToRole.value = \"\";\r\n                this.AuthorizationIgnore.checked = false;\r\n                this.ConfirmationText.clear();\r\n                this.PleaseWaitText.clear();\r\n                this.SaveReturnUrl.checked = false;\r\n                this.AddToOriginList.checked = false;\r\n                this.NeedsModuleContext.checked = false;\r\n                this.DontFollow.checked = false;\r\n                this.enableFields(false);\r\n            }\r\n            this.updateButtons();\r\n        }\r\n        private enableFields(enable: boolean): void {\r\n            if (enable) {\r\n                this.EntryType.enable(true);\r\n                switch (Number(this.EntryType.value)) {\r\n                    case MenuEntryType.Entry:\r\n                        this.Url.enable(true);\r\n                        this.SubModule.enable(true);\r\n                        this.MenuText.enable(true);\r\n                        this.LinkText.enable(true);\r\n                        $YetaWF.elementEnable(this.ImageUrlFinal);\r\n                        this.Tooltip.enable(true);\r\n                        this.Legend.enable(true);\r\n                        $YetaWF.elementEnable(this.Enabled);\r\n                        $YetaWF.elementEnable(this.CssClass);\r\n                        this.Style.enable(true);\r\n                        this.Mode.enable(true);\r\n                        this.Category.enable(true);\r\n                        this.LimitToRole.enable(true);\r\n                        $YetaWF.elementEnable(this.AuthorizationIgnore);\r\n                        this.ConfirmationText.enable(true);\r\n                        this.PleaseWaitText.enable(true);\r\n                        $YetaWF.elementEnable(this.SaveReturnUrl);\r\n                        $YetaWF.elementEnable(this.AddToOriginList);\r\n                        $YetaWF.elementEnable(this.NeedsModuleContext);\r\n                        $YetaWF.elementEnable(this.DontFollow);\r\n                        break;\r\n                    case MenuEntryType.Parent:\r\n                        this.Url.enable(false);\r\n                        this.SubModule.enable(false);\r\n                        this.MenuText.enable(true);\r\n                        this.LinkText.enable(true);\r\n                        $YetaWF.elementEnable(this.ImageUrlFinal);\r\n                        this.Tooltip.enable(true);\r\n                        this.Legend.enable(true);\r\n                        $YetaWF.elementEnable(this.Enabled);\r\n                        $YetaWF.elementEnable(this.CssClass);\r\n                        this.Style.enable(true);\r\n                        this.Mode.enable(true);\r\n                        this.Category.enable(true);\r\n                        this.LimitToRole.enable(true);\r\n                        $YetaWF.elementDisable(this.AuthorizationIgnore);\r\n                        this.ConfirmationText.enable(false);\r\n                        this.PleaseWaitText.enable(false);\r\n                        $YetaWF.elementDisable(this.SaveReturnUrl);\r\n                        $YetaWF.elementDisable(this.AddToOriginList);\r\n                        $YetaWF.elementDisable(this.NeedsModuleContext);\r\n                        $YetaWF.elementDisable(this.DontFollow);\r\n                        break;\r\n                    case MenuEntryType.Separator:\r\n                        this.Url.enable(false);\r\n                        this.SubModule.enable(false);\r\n                        this.MenuText.enable(false);\r\n                        this.LinkText.enable(false);\r\n                        $YetaWF.elementDisable(this.ImageUrlFinal);\r\n                        this.Tooltip.enable(false);\r\n                        this.Legend.enable(false);\r\n                        $YetaWF.elementDisable(this.Enabled);\r\n                        $YetaWF.elementDisable(this.CssClass);\r\n                        this.Style.enable(false);\r\n                        this.Mode.enable(false);\r\n                        this.Category.enable(false);\r\n                        this.LimitToRole.enable(false);\r\n                        $YetaWF.elementDisable(this.AuthorizationIgnore);\r\n                        this.ConfirmationText.enable(false);\r\n                        this.PleaseWaitText.enable(false);\r\n                        $YetaWF.elementDisable(this.SaveReturnUrl);\r\n                        $YetaWF.elementDisable(this.AddToOriginList);\r\n                        $YetaWF.elementDisable(this.NeedsModuleContext);\r\n                        $YetaWF.elementDisable(this.DontFollow);\r\n                        break;\r\n                }\r\n            } else {\r\n                this.EntryType.enable(false);\r\n                this.Url.enable(false);\r\n                this.SubModule.enable(false);\r\n                this.MenuText.enable(false);\r\n                this.LinkText.enable(false);\r\n                $YetaWF.elementDisable(this.ImageUrlFinal);\r\n                this.Tooltip.enable(false);\r\n                this.Legend.enable(false);\r\n                $YetaWF.elementDisable(this.Enabled);\r\n                $YetaWF.elementDisable(this.CssClass);\r\n                this.Style.enable(false);\r\n                this.Mode.enable(false);\r\n                this.Category.enable(false);\r\n                this.LimitToRole.enable(false);\r\n                $YetaWF.elementDisable(this.AuthorizationIgnore);\r\n                this.ConfirmationText.enable(false);\r\n                this.PleaseWaitText.enable(false);\r\n                $YetaWF.elementDisable(this.SaveReturnUrl);\r\n                $YetaWF.elementDisable(this.AddToOriginList);\r\n                $YetaWF.elementDisable(this.NeedsModuleContext);\r\n                $YetaWF.elementDisable(this.DontFollow);\r\n            }\r\n        }\r\n        private updateButtons(): void {\r\n            // save, reset, delete, add new\r\n            var enable = (this.ActiveEntry && this.ActiveData) != null;\r\n            $YetaWF.elementEnableToggle(this.SaveButton, enable);\r\n            $YetaWF.elementEnableToggle(this.DeleteButton, enable);\r\n            $YetaWF.elementEnableToggle(this.ResetButton, enable);\r\n            $YetaWF.elementEnableToggle(this.AddButton, enable);\r\n            $YetaWF.elementEnableToggle(this.InsertButton, enable);\r\n        }\r\n\r\n        private sendEntireMenu(): void {\r\n\r\n            if ($YetaWF.isLoading) return;\r\n            var form = $YetaWF.Forms.getForm(this.Details);\r\n            var menuVersionInput = $YetaWF.getElement1BySelector(\"input[name='MenuVersion']\", [form]) as HTMLInputElement;\r\n            var menuVersion = menuVersionInput.value;\r\n            var menuGuidInput = $YetaWF.getElement1BySelector(\"input[name='MenuGuid']\", [form]) as HTMLInputElement;\r\n            var menuGuid = menuGuidInput.value;\r\n\r\n            var uri = $YetaWF.parseUrl(this.Setup.AjaxUrl);\r\n            uri.addFormInfo(form);\r\n            uri.addSearch(\"menuGuid\", menuGuid);\r\n            uri.addSearch(\"menuVersion\", menuVersion);\r\n            uri.addSearch(\"EntireMenu\", JSON.stringify(this.buildHierarchy()));\r\n\r\n            $YetaWF.setLoading(true);\r\n\r\n            var request: XMLHttpRequest = new XMLHttpRequest();\r\n            request.open(\"POST\", this.Setup.AjaxUrl);\r\n            request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n            request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            request.onreadystatechange = (ev: Event): any => {\r\n                if (request.readyState === 4 /*DONE*/) {\r\n                    $YetaWF.setLoading(false);\r\n                    $YetaWF.processAjaxReturn(request.responseText, request.statusText, request, undefined, undefined, (result: string):void => {\r\n                        var sendResult: SendResult = JSON.parse(result);\r\n                        menuVersionInput.value = sendResult.NewVersion.toString();\r\n                    });\r\n                }\r\n            };\r\n            var data = uri.toFormData();\r\n            request.send(data);\r\n        }\r\n    }\r\n}\r\n"]}