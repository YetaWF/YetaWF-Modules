{"version":3,"sources":["AddOns/YetaWF/Messenger/_Addons/SkinMessagingModule/SkinMessaging.tsx"],"names":[],"mappings":";AAEA,kBAAU,gBAAgB,CAAC;IAEvB,MAAa,mBAAmB;QAErB,UAAU,EAAE,GAAG,CAAC;QAChB,QAAQ,EAAE,GAAG,CAAC;QAErB,OAAc,SAAS,EAAE,mBAAmB,CAAC;QAE7C,OAAO,CAAC,SAAS,CAAM;;QAWvB,OAAO,CAAC,mBAAmB;QAc3B,OAAO,CAAC,aAAa;QAQrB,OAAO,CAAC,iBAAiB;QAQzB,OAAO,CAAC,iBAAiB;QAMzB,OAAO,CAAC,qBAAqB;QAK7B,OAAO,CAAC,qBAAqB;QAG7B,OAAO,CAAC,iBAAiB;QAKzB,OAAO,CAAC,oBAAoB;QAQrB,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;QAG1D,cAAc,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;QAGrC,YAAY,CAAC,IAAI,EAAE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;QAG/C,WAAW,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;QAG7C,eAAe,CAAC,QAAQ,EAAE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;KAGhE;CACJ","file":"SkinMessaging.d.ts","sourcesContent":["/* Copyright Â© 2018 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Messenger#License */\r\n\r\nnamespace YetaWF_Messenger {\r\n\r\n    export class SkinMessagingModule {\r\n\r\n        public connection: any;\r\n        public hubProxy: any;\r\n\r\n        public static singleton: SkinMessagingModule;\r\n\r\n        private tempProxy: any;\r\n\r\n        constructor() {\r\n            var $$: any = $;\r\n            this.connection = $$.hubConnection(YConfigs.SignalR.Url, { useDefaultPath: false });\r\n            this.tempProxy = this.connection.createHubProxy(\"YetaWF_Messenger_Messaging\");\r\n            this.tempProxy.on(\"dummy\", ():void => { /* empty */ });\r\n\r\n            this.connection.start().done(() => this.onConnectionStarted());\r\n        }\r\n\r\n        private onConnectionStarted():void {\r\n            this.hubProxy = this.tempProxy;\r\n\r\n            this.hubProxy.on(\"message\", (key: number, from: string, message: string, sent: string): void => this.handleMessage(key, from, message, sent));\r\n            this.hubProxy.on(\"messageSent\", (key: number, to: string, message: string, sent: string):void => this.handleMessageSent(key, to, message, sent));\r\n            this.hubProxy.on(\"messageSeen\", (key: number, to: string): void => this.handleMessageSeen(key, to));\r\n            this.hubProxy.on(\"allMessagesSeen\", (to: string): void => this.handleAllMessagesSeen(to));\r\n            this.hubProxy.on(\"notifyException\", (message: string): void => this.handleNotifyException(message));\r\n            this.hubProxy.on(\"userConnect\", (user: string): void => this.handleUserConnect(user));\r\n            this.hubProxy.on(\"userDisconnect\", (user: string): void => this.handleUserDisconnect(user));\r\n        }\r\n\r\n        // Incoming message handlers\r\n\r\n        private handleMessage(key: number, from: string, messageText: string, sent: string): void {\r\n            $(document).trigger(\"YetaWF_Messenger_Messaging_Message\", {\r\n                key: key,\r\n                from: from,\r\n                messageText: messageText,\r\n                sent: sent,\r\n            });\r\n        }\r\n        private handleMessageSent(key: number, to: string, messageText: string, sent: string): void {\r\n            $(document).trigger(\"YetaWF_Messenger_Messaging_MessageSent\", {\r\n                key: key,\r\n                to: to,\r\n                messageText: messageText,\r\n                sent: sent,\r\n            });\r\n        }\r\n        private handleMessageSeen(key: number, to: string): void {\r\n            $(document).trigger(\"YetaWF_Messenger_Messaging_MessageSeen\", {\r\n                key: key,\r\n                to: to,\r\n            });\r\n        }\r\n        private handleAllMessagesSeen(to: string): void {\r\n            $(document).trigger(\"YetaWF_Messenger_Messaging_AllMessagesSeen\", {\r\n                to: to,\r\n            });\r\n        }\r\n        private handleNotifyException(message: string): void {\r\n            $YetaWF.alert(message, \"Messages Error\");\r\n        }\r\n        private handleUserConnect(user: string): void {\r\n            $(document).trigger(\"YetaWF_Messenger_Messaging_UserConnect\", {\r\n                user: user,\r\n            });\r\n        }\r\n        private handleUserDisconnect(user: string): void {\r\n            $(document).trigger(\"YetaWF_Messenger_Messaging_UserDisconnect\", {\r\n                user: user,\r\n            });\r\n        }\r\n\r\n        // outgoing commands\r\n\r\n        public send(to: string, messageText: string): JQuery.Promise<any> {\r\n            return this.hubProxy.invoke(\"Send\", to, messageText);\r\n        }\r\n        public getOnlineUsers(): JQuery.Promise<any> {\r\n            return this.hubProxy.invoke(\"GetOnlineUsers\");\r\n        }\r\n        public isUserOnline(user: string): JQuery.Promise<any> {\r\n            return this.hubProxy.invoke(\"IsUserOnline\", user);\r\n        }\r\n        public messageSeen(key: number): JQuery.Promise<any> {\r\n            return this.hubProxy.invoke(\"MessageSeen\", key);\r\n        }\r\n        public allMessagesSeen(fromUser: string): JQuery.Promise<any> {\r\n            return this.hubProxy.invoke(\"AllMessagesSeen\", fromUser);\r\n        }\r\n    }\r\n}\r\n\r\nYetaWF_Messenger.SkinMessagingModule.singleton = new YetaWF_Messenger.SkinMessagingModule();\r\n\r\n"]}