{"version":3,"sources":["AddOns/YetaWF/Messenger/_Addons/SkinBrowserNotificationsModule/SkinBrowserNotifications.ts"],"names":[],"mappings":"AAEA,OAAO,CAAC,IAAI,OAAO,EAAE,GAAG,CAAC;AAEzB,kBAAU,gBAAgB,CAAC;IAEvB,MAAa,8BAA8B;QAEvC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAA0C;QAC5E,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAA8C;QAE3E,MAAM,CAAC,EAAE,EAAE,OAAO,CAAQ;;QAyC1B,OAAO,CAAC,aAAa;QAqBrB,OAAO,CAAC,gBAAgB;KAU3B;CACJ","file":"SkinBrowserNotifications.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Messenger#License */\r\n\r\ndeclare var signalR: any;// smh\r\n\r\nnamespace YetaWF_Messenger {\r\n\r\n    export class SkinBrowserNotificationsModule {\r\n\r\n        static readonly MODULEGUID: string = \"7F60ABC1-07A1-49f1-8381-BD4276977FF0\";\r\n        static readonly PROXY: string = \"YetaWF_Messenger_BrowserNotificationsHub\";\r\n\r\n        static on: boolean = true;\r\n\r\n        constructor() {\r\n\r\n            if (!(\"Notification\" in window)) {\r\n                console.error(\"No notification support\");\r\n                return;\r\n            }\r\n\r\n            if (YConfigs.SignalR.Version === \"MVC5\") {\r\n                var $$: any = $;\r\n                var connection: any = $$.hubConnection(YConfigs.SignalR.Url, { useDefaultPath: false });\r\n                var hubProxy: any = connection.createHubProxy(SkinBrowserNotificationsModule.PROXY);\r\n\r\n                hubProxy.on(\"Message\", (title: string, text: string, icon?: string, timeout?: number, url?: string): void => {\r\n                    this.handleMessage(title, text, icon, timeout, url);\r\n                });\r\n\r\n                connection.start().done((): void => { /*empty*/ });\r\n            } else {\r\n\r\n                const connection = new signalR.HubConnectionBuilder()\r\n                    .withUrl(`${YConfigs.SignalR.Url}/${SkinBrowserNotificationsModule.PROXY}`)\r\n                    .configureLogging(signalR.LogLevel.Information)\r\n                    .build();\r\n\r\n                connection.on(\"Message\", (title: string, text: string, icon?: string, timeout?: number, url?: string): void => {\r\n                    this.handleMessage(title, text, icon, timeout, url);\r\n                });\r\n\r\n                connection.start().then((): void => { /*empty*/ });\r\n            }\r\n\r\n\r\n            $YetaWF.registerContentChange((addonGuid: string, on: boolean): void => {\r\n                if (addonGuid === SkinBrowserNotificationsModule.MODULEGUID) {\r\n                    SkinBrowserNotificationsModule.on = on;\r\n                }\r\n            });\r\n        }\r\n\r\n        private handleMessage(title: string, text: string, icon?: string, timeout?: number, url?: string): void {\r\n\r\n            if (SkinBrowserNotificationsModule.on) {\r\n\r\n                switch (Notification.permission) {\r\n                    case \"default\":\r\n                        Notification.requestPermission().then((result: NotificationPermission): void => {\r\n                            if (result === \"granted\") {\r\n                                this.showNotification(title, text, icon, timeout, url);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case \"granted\":\r\n                        this.showNotification(title, text, icon, timeout, url);\r\n                        break;\r\n                    default:\r\n                        console.error(\"No permission to show notification\");\r\n                }\r\n            }\r\n        }\r\n\r\n        private showNotification(title: string, text: string, icon?: string, timeout?: number, url?: string): void {\r\n            var notification = new Notification(title, { body: text, icon: icon, tag: \"YetaWF_Messenger.BrowserNotification\" });\r\n            if (url) {\r\n                notification.addEventListener(\"click\", (ev: Event): void => {\r\n                    window.open(url, \"_blank\");\r\n                });\r\n            }\r\n            if (timeout)\r\n                setTimeout(notification.close.bind(notification), timeout);\r\n        }\r\n    }\r\n}\r\n"]}