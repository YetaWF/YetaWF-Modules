{"version":3,"sources":["AddOns/YetaWF/Messenger/_Addons/Messaging/Messaging.tsx"],"names":[],"mappings":"AAEA,QAAA,IAAI,QAAQ,EAAE,GAAG,CAAC;AAElB,kBAAU,gBAAgB,CAAC;IAEvB,UAAiB,YAAY;QACzB,WAAW,EAAE,MAAM,CAAC;QACpB,YAAY,EAAE,MAAM,CAAC;KACxB;IACD,UAAiB,eAAe;QAC5B,aAAa,EAAE,MAAM,CAAC;QACtB,cAAc,EAAE,MAAM,CAAC;KAC1B;IAED,MAAa,eAAe;QAExB,OAAO,CAAC,MAAM,CAAS;oBAIX,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM;QAiBvG,OAAO,CAAC,iBAAiB;QAMzB,OAAO,CAAC,oBAAoB;QAM5B,OAAO,CAAC,YAAY;QAGpB,OAAO,CAAC,gBAAgB;QAKxB,OAAO,CAAC,iBAAiB;QAMzB,OAAO,CAAC,UAAU;QAGlB,OAAO,CAAC,cAAc;QAKtB,OAAO,CAAC,UAAU;QAGlB,OAAO,CAAC,cAAc;QAKtB,OAAO,CAAC,WAAW;QAcnB,OAAO,CAAC,YAAY;QAGpB,OAAO,CAAC,aAAa;QAqBrB,OAAO,CAAC,kBAAkB;QAU1B,OAAO,CAAC,gBAAgB;QAGxB,OAAO,CAAC,iBAAiB;QASzB,OAAO,CAAC,eAAe;KAc1B;CACJ","file":"Messaging.d.ts","sourcesContent":["/* Copyright Â© 2018 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Messenger#License */\r\n\r\nvar CKEDITOR: any;\r\n\r\nnamespace YetaWF_Messenger {\r\n\r\n    export interface IPackageLocs {\r\n        msgOnlineTT: string;\r\n        msgOfflineTT: string;\r\n    }\r\n    export interface IPackageConfigs {\r\n        msgOnlineIcon: string;\r\n        msgOfflineIcon: string;\r\n    }\r\n\r\n    export class MessagingModule {\r\n\r\n        private idForm: string;\r\n        //private idSend: string;\r\n        //private idCancel: string;\r\n\r\n        constructor(idForm: string, idSend: string, idCancel: string, offlineImage: string, onlineImage: string) {\r\n            this.idForm = idForm;\r\n            //this.idSend = idSend;\r\n            //this.idCancel = idCancel;\r\n\r\n            //var selToUser: HTMLSelectElement = this.getSelToUserTest();\r\n            $(`#${this.idForm}`).on(\"change\", \"select[name='ToUserId']\", () => this.onUserSelect());\r\n\r\n            var btnSend: HTMLButtonElement = this.getBtnSendTest();\r\n            btnSend.addEventListener(\"click\", (ev: Event) => this.onClickSend(ev), false);\r\n\r\n            $(document).on(\"YetaWF_Messenger_Messaging_UserConnect\", (event: any, o: any) => this.handleUserConnect(o.user));\r\n            $(document).on(\"YetaWF_Messenger_Messaging_UserDisconnect\", (event: any, o: any) => this.handleUserDisconnect(o.user));\r\n\r\n            this.updateButtons();\r\n            this.updateOnlineStatus();\r\n        }\r\n        private handleUserConnect(user: string): void {\r\n            var toUser: string | null = this.getSelToUserValue();\r\n            if (toUser && toUser.length > 0 && toUser === user) {\r\n                this.setOnlineStatus(true);\r\n            }\r\n        }\r\n        private handleUserDisconnect(user: string): void {\r\n            var toUser: string | null = this.getSelToUserValue();\r\n            if (toUser && toUser.length > 0 && toUser === user) {\r\n                this.setOnlineStatus(false);\r\n            }\r\n        }\r\n        private getSelToUser(): HTMLSelectElement {\r\n            return document.querySelector(`#${this.idForm} select[name=\"ToUserId\"]`) as HTMLSelectElement;\r\n        }\r\n        private getSelToUserTest(): HTMLSelectElement {\r\n            var selToUser: HTMLSelectElement = this.getSelToUser();\r\n            if (!selToUser) throw \"user selection not found\";/*DEBUG*/\r\n            return selToUser;\r\n        }\r\n        private getSelToUserValue(): string | null {\r\n            var selToUser: HTMLSelectElement = this.getSelToUserTest();\r\n            if (selToUser.selectedIndex <= 0) return null;\r\n            var user: string = selToUser.options[selToUser.selectedIndex].text;\r\n            return user;\r\n        }\r\n        private getEditMsg(): HTMLTextAreaElement {\r\n            return document.querySelector(`#${this.idForm} textarea[name=\"MessageText\"]`) as HTMLTextAreaElement;\r\n        }\r\n        private getEditMsgTest(): HTMLTextAreaElement {\r\n            var editMsg: HTMLTextAreaElement = this.getEditMsg();\r\n            if (!editMsg) throw \"editor (new message) not found\";/*DEBUG*/\r\n            return editMsg;\r\n        }\r\n        private getBtnSend(): HTMLButtonElement {\r\n            return document.querySelector(`#${this.idForm} input[name=\"Send\"]`) as HTMLButtonElement;\r\n        }\r\n        private getBtnSendTest(): HTMLButtonElement {\r\n            var btnSend: HTMLButtonElement = this.getBtnSend();\r\n            if (!btnSend) throw \"send button not found\";/*DEBUG*/\r\n            return btnSend;\r\n        }\r\n        private onClickSend(event: Event): void {\r\n\r\n            var editMsg: HTMLTextAreaElement = this.getEditMsgTest();\r\n            //var btnSend: HTMLButtonElement = this.getBtnSendTest();\r\n            var user: string | null = this.getSelToUserValue();\r\n            if (!user) return;\r\n\r\n            var msg: string = CKEDITOR.instances[editMsg.id].getData();\r\n            if (msg.trim().length <= 0) return;\r\n\r\n            YetaWF_Messenger.SkinMessagingModule.singleton.send(user, msg);\r\n\r\n            CKEDITOR.instances[editMsg.id].setData(\"\");\r\n        }\r\n        private onUserSelect(): void {\r\n            this.clearOnlineStatus();\r\n        }\r\n        private updateButtons(): void {\r\n            var selToUser: HTMLSelectElement = this.getSelToUser();\r\n            var editMsg: HTMLTextAreaElement = this.getEditMsg();\r\n            var btnSend: HTMLButtonElement = this.getBtnSend();\r\n\r\n            if (!selToUser || !editMsg || !btnSend) return;\r\n\r\n            var enabled: boolean = true;\r\n            if (enabled) {\r\n                if (!selToUser || selToUser.selectedIndex <= 0 || selToUser.options[selToUser.selectedIndex].text.trim().length <= 0)\r\n                    enabled = false;\r\n            }\r\n            if (enabled) {\r\n                var msg: string = CKEDITOR.instances[editMsg.id].getData();\r\n                if (msg.trim().length <= 0)\r\n                    enabled = false;\r\n            }\r\n            btnSend.disabled = !enabled;\r\n\r\n            setTimeout(() => this.updateButtons(), 100);\r\n        }\r\n        private updateOnlineStatus(): void {\r\n            var user: string | null = this.getSelToUserValue();\r\n            if (user && user.length > 0) {\r\n                YetaWF_Messenger.SkinMessagingModule.singleton.isUserOnline(user)\r\n                    .done((online:boolean):void => this.isUserOnlineDone(online))\r\n                    .fail(():void => this.isUserOnlineDone(false));\r\n            } else {\r\n                this.isUserOnlineDone(false);\r\n            }\r\n        }\r\n        private isUserOnlineDone(online: boolean): void {\r\n            this.setOnlineStatus(online);\r\n        }\r\n        private clearOnlineStatus(): JQuery<HTMLElement>  {\r\n            //var divUser: HTMLDivElement = document.querySelector(`#${this.idForm} .yt_yetawf_identity_userid`) as HTMLDivElement;\r\n            var $divId: JQuery<HTMLElement> = $(`#${this.idForm} .yt_yetawf_identity_userid`);\r\n            if ($divId.length === 0) throw \"user Id Div not found\";/*DEBUG*/\r\n            var $parent: JQuery<HTMLElement> = $divId.parent();\r\n            $(\"img.t_status\", $parent).remove();\r\n            return $parent;\r\n\r\n        }\r\n        private setOnlineStatus(online: boolean): void {\r\n            var $parent: JQuery<HTMLElement> = this.clearOnlineStatus();\r\n\r\n            var user: string | null = this.getSelToUserValue();\r\n            if (!user) return;\r\n\r\n            var content: string;\r\n            if (online) {\r\n                content = `<img class=\"t_status\" alt=\"${YLocs.YetaWF_Messenger.msgOnlineTT}\" title=\"${YLocs.YetaWF_Messenger.msgOnlineTT}\" src=\"${YConfigs.YetaWF_Messenger.msgOnlineIcon}\" >`;\r\n            } else {\r\n                content = `<img class=\"t_status\" alt=\"${YLocs.YetaWF_Messenger.msgOfflineTT}\" title=\"${YLocs.YetaWF_Messenger.msgOfflineTT}\" src=\"${YConfigs.YetaWF_Messenger.msgOfflineIcon}\" >`;\r\n            }\r\n            $parent.append(content);\r\n        }\r\n    }\r\n}\r\n"]}