{"version":3,"sources":["AddOns/YetaWF/DevTests/_Templates/ListOfEmailAddresses/ListOfEmailAddressesEdit.ts"],"names":[],"mappings":"AAEA,kBAAU,eAAe,CAAC;IAEtB,UAAU,yBAAyB;QAC/B,MAAM,EAAE,MAAM,CAAC;QACf,MAAM,EAAE,MAAM,CAAC;KAClB;IAMD,MAAa,iCAAkC,SAAQ,MAAM,CAAC,iBAAiB;QAE3E,OAAO,CAAC,KAAK,CAA4B;QACzC,OAAO,CAAC,IAAI,CAA6B;QACzC,OAAO,CAAC,SAAS,CAAmB;QACpC,OAAO,CAAC,UAAU,CAAmB;QACrC,OAAO,CAAC,gBAAgB,CAAkB;QAC1C,OAAO,CAAC,UAAU,CAAa;oBAEnB,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,yBAAyB;QA4C/D,OAAO,CAAC,YAAY;KAKvB;CACJ","file":"ListOfEmailAddressesEdit.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/DevTests#License */\r\n\r\nnamespace YetaWF_DevTests {\r\n\r\n    interface ListOfEmailAddressesSetup {\r\n        GridId: string;\r\n        AddUrl: string;\r\n    }\r\n    interface GridRecordResult {\r\n        TR: string;\r\n        StaticData: string;\r\n    }\r\n\r\n    export class ListOfEmailAddressesEditComponent extends YetaWF.ComponentBaseImpl {\r\n\r\n        private Setup: ListOfEmailAddressesSetup;\r\n        private Grid: YetaWF_ComponentsHTML.Grid;\r\n        private buttonAdd: HTMLInputElement;\r\n        private inputEmail: HTMLInputElement;\r\n        private ReloadInProgress: boolean = false;\r\n        private AddCounter: number = 0;\r\n\r\n        constructor(controlId: string, setup: ListOfEmailAddressesSetup) {\r\n            super(controlId);\r\n            this.Setup = setup;\r\n\r\n            this.Grid = YetaWF.ComponentBaseDataImpl.getControlById(this.Setup.GridId, YetaWF_ComponentsHTML.Grid.SELECTOR);\r\n            this.buttonAdd = $YetaWF.getElement1BySelector(\"input[name='btnAdd']\", [this.Control]) as HTMLInputElement;\r\n            this.inputEmail = $YetaWF.getElement1BySelector(\"input[name$='.NewValue']\", [this.Control]) as HTMLInputElement;\r\n\r\n            $YetaWF.registerEventHandler(this.buttonAdd, \"click\", null, (ev: MouseEvent): boolean => {\r\n\r\n                if (this.ReloadInProgress) return true;\r\n\r\n                this.ReloadInProgress = true;\r\n                $YetaWF.setLoading(true);\r\n\r\n                var uri = $YetaWF.parseUrl(this.Setup.AddUrl);\r\n                uri.addFormInfo(this.Control, ++this.AddCounter);\r\n                uri.addSearch(\"newEmailAddress\", this.inputEmail.value.trim());\r\n                uri.addSearch(\"fieldPrefix\", this.Grid.FieldName);\r\n                uri.addSearch(\"data\", JSON.stringify(this.Grid.StaticData));\r\n                if (this.Grid.ExtraData) uri.addSearchSimpleObject(this.Grid.ExtraData);\r\n                var request: XMLHttpRequest = new XMLHttpRequest();\r\n                request.open(\"POST\", this.Setup.AddUrl, true);\r\n                request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n                request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                request.onreadystatechange = (ev: Event): any => {\r\n                    if (request.readyState === 4 /*DONE*/) {\r\n                        this.ReloadInProgress = false;\r\n                        $YetaWF.setLoading(false);\r\n                        $YetaWF.processAjaxReturn(request.responseText, request.statusText, request, undefined, undefined, (result: string) => {\r\n                            var partial: GridRecordResult = JSON.parse(request.responseText);\r\n                            this.ReloadInProgress = false;\r\n                            $YetaWF.setLoading(false);\r\n                            this.Grid.AddRecord(partial.TR, partial.StaticData);\r\n                            this.inputEmail.value = \"\";\r\n                        });\r\n                    }\r\n                };\r\n                request.send(uri.toFormData());\r\n                return false;\r\n            });\r\n            $YetaWF.handleInputReturnKeyForButton(this.inputEmail, this.buttonAdd);\r\n            $YetaWF.registerMultipleEventHandlers([this.inputEmail], [\"input\", \"change\", \"click\", \"keyup\", \"paste\"], null, (ev: Event): boolean => { this.toggleButton(); return true; });\r\n        }\r\n        private toggleButton() : void {\r\n            var s = this.inputEmail.value;\r\n            s = s.trim();\r\n            $YetaWF.elementEnableToggle(this.buttonAdd, s.length > 0);\r\n        }\r\n    }\r\n}\r\n\r\n"]}