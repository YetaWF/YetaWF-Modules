{"version":3,"sources":["Addons/YetaWF/ComponentsHTML/_Addons/Popups/PopupsImpl.ts"],"names":[],"mappings":";AAIA,UAAU,QAAQ;IACd,kBAAkB,EAAE,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;CAC9C;AAED,kBAAU,qBAAqB,CAAC;IAE5B,MAAa,UAAW,YAAW,MAAM,CAAC,WAAW;QAEjD;;WAEG;QACI,UAAU,CAAC,WAAW,CAAC,EAAE,OAAO,GAAG,IAAI;QAa9C;;WAEG;QACI,eAAe,IAAI,IAAI;QAS9B,OAAO,CAAC,MAAM,CAAC,kBAAkB;QAOjC;;WAEG;QACI,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,aAAa,EAAE,IAAI,EAAC,CAAC,MAAM,EAAC,WAAW,KAAK,IAAI,GAAG,IAAI;QAuE9F,OAAO,CAAC,MAAM,CAAC,iBAAiB;QAYhC;;WAEG;QACI,eAAe,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI;KAwE5C;CACJ;AAGD,QAAA,IAAI,iBAAiB,EAAE,MAAM,CAAC,WAAoD,CAAC","file":"PopupsImpl.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/ComponentsHTML#License */\r\n\r\n/* Popups implementation required by YetaWF */\r\n\r\ninterface Document {\r\n    YPopupWindowActive: kendo.ui.Window | null;\r\n}\r\n\r\nnamespace YetaWF_ComponentsHTML {\r\n\r\n    export class PopupsImpl implements YetaWF.IPopupsImpl {\r\n\r\n        /**\r\n         * Close the popup - this can only be used by code that is running within the popup (not the parent document/page)\r\n         */\r\n        public closePopup(forceReload?: boolean): void {\r\n            if (YVolatile.Basics.IsInPopup) {\r\n                var forced = (forceReload === true);\r\n                if (forced)\r\n                    $YetaWF.reloadPage(true, window.parent);\r\n                // with unified page sets there may actually not be a parent, but window.parent returns itself in this case anyway\r\n                var popup: kendo.ui.Window | null = window.parent.document.YPopupWindowActive;\r\n                PopupsImpl.internalClosePopup(popup);\r\n            }\r\n            document.YPopupWindowActive = null;\r\n            YVolatile.Basics.IsInPopup = false; // we're no longer in a popup\r\n        }\r\n\r\n        /**\r\n         * Close the popup - this can only be used by code that is running on the main page (not within the popup)\r\n         */\r\n        public closeInnerPopup(): void {\r\n            if (YVolatile.Basics.IsInPopup) {\r\n                var popup: kendo.ui.Window | null = document.YPopupWindowActive;\r\n                PopupsImpl.internalClosePopup(popup);\r\n            }\r\n            document.YPopupWindowActive = null;\r\n            YVolatile.Basics.IsInPopup = false; // we're no longer in a popup\r\n        }\r\n\r\n        private static internalClosePopup(popup: kendo.ui.Window | null) : void {\r\n            if (popup) {\r\n                popup.close();\r\n                popup.destroy();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Opens a dynamic popup, usually a div added to the current document.\r\n         */\r\n        public openDynamicPopup(result: YetaWF.ContentResult, done:(dialog:HTMLElement) => void): void {\r\n\r\n            ComponentsHTMLHelper.REQUIRES_KENDOUI((): void => {\r\n\r\n                // we're already in a popup\r\n                if ($YetaWF.isInPopup())\r\n                    PopupsImpl.closeDynamicPopup();\r\n\r\n                YVolatile.Basics.IsInPopup = true; // we're in a popup\r\n\r\n                // insert <div id=\"ypopup\" class='yPopupDyn'></div> at top of page for the popup window\r\n                // this is automatically removed when destroy() is called\r\n                $(\"body\").prepend(\"<div id='ypopup' class='yPopupDyn'></div>\");\r\n                var $popupwin = $(\"#ypopup\");\r\n                $popupwin.addClass(YVolatile.Skin.PopupCss);\r\n\r\n                // add pane content\r\n                var contentLength = result.Content.length;\r\n                for (var i = 0; i < contentLength; i++) {\r\n                    // add the pane\r\n                    var $pane = $(\"<div class='yPane'></div>\").addClass(result.Content[i].Pane);\r\n                    $pane.append(result.Content[i].HTML);\r\n                    $popupwin.append($pane);\r\n                }\r\n\r\n                var popup: kendo.ui.Window | null = null;\r\n\r\n                var acts: string[] = [];\r\n                if (YVolatile.Skin.PopupMaximize)\r\n                    acts.push(\"Maximize\");\r\n                acts.push(\"Close\");\r\n\r\n                // Create the window\r\n                $popupwin.kendoWindow({\r\n                    actions: acts,\r\n                    width: YVolatile.Skin.PopupWidth,\r\n                    height: \"auto\",\r\n                    maxHeight: YVolatile.Skin.PopupHeight,\r\n                    draggable: true,\r\n                    iframe: false,\r\n                    modal: true,\r\n                    resizable: false,\r\n                    title: result.PageTitle,\r\n                    visible: false,\r\n                    close: (e: kendo.ui.WindowCloseEvent): void => {\r\n                        PopupsImpl.closeDynamicPopup();\r\n                    },\r\n                    animation: false,\r\n                    refresh: (e: kendo.ui.WindowEvent): void => { // page complete\r\n                        $YetaWF.setLoading(false);\r\n                    },\r\n                    error: (e: kendo.ui.WindowErrorEvent): void => {\r\n                        $YetaWF.setLoading(false);\r\n                        $YetaWF.error(\"Request failed with status \" + e.status);\r\n                    }\r\n                });\r\n\r\n                // show and center the window\r\n                popup = $popupwin.data(\"kendoWindow\");\r\n                popup.center().open();\r\n\r\n                // mark that a popup is active\r\n                (document as any).expando = true;\r\n                document.YPopupWindowActive = popup;\r\n\r\n                $YetaWF.setCondense($popupwin[0], YVolatile.Skin.PopupWidth);\r\n\r\n                done($popupwin[0]);\r\n            });\r\n        }\r\n\r\n        private static closeDynamicPopup() : void {\r\n            var $popup = $(\"#ypopup\");\r\n            if ($popup.length > 0) {\r\n                $YetaWF.processClearDiv($popup[0]);\r\n                var popup: kendo.ui.Window = $popup.data(\"kendoWindow\") as kendo.ui.Window;\r\n                // don't call internalClosePopup, otherwise we get close event\r\n                popup.destroy(); // don't close, just destroy\r\n            }\r\n            document.YPopupWindowActive = null;\r\n            YVolatile.Basics.IsInPopup = false; // we're no longer in a popup\r\n        }\r\n\r\n        /**\r\n         * Open a static popup, usually a popup based on iframe.\r\n         */\r\n        public openStaticPopup(url: string): void {\r\n\r\n            ComponentsHTMLHelper.REQUIRES_KENDOUI((): void => {\r\n\r\n                // we're already in a popup\r\n                if ($YetaWF.isInPopup()) {\r\n                    // we handle links within a popup by replacing the current popup page with the new page\r\n                    $YetaWF.setLoading(true);\r\n                    var $popupwin = $(\"#ypopup\", $(window.parent.document));\r\n                    if ($popupwin.length === 0) throw \"Couldn't find popup window\";/*DEBUG*/\r\n                    var iframeDomElement = $popupwin.children(\"iframe\")[0] as HTMLIFrameElement;\r\n                    iframeDomElement.src = url;\r\n                    return;\r\n                }\r\n\r\n                YVolatile.Basics.IsInPopup = true; // we're in a popup\r\n\r\n                // insert <div id=\"ypopup\"></div> at top of page for the popup window\r\n                // this is automatically removed when destroy() is called\r\n                $(\"body\").prepend(\"<div id='ypopup'></div>\");\r\n                var $popupwin = $(\"#ypopup\") as JQuery<HTMLElement>;\r\n                var popup: kendo.ui.Window | null = null;\r\n\r\n                var acts: string[] = [];\r\n                acts.push(\"Maximize\");// always show the maximize button - hide it based on popup skin options\r\n                acts.push(\"Close\");\r\n\r\n                // Create the window\r\n                $popupwin.kendoWindow({\r\n                    actions: acts,\r\n                    width: YConfigs.Popups.DefaultPopupWidth,\r\n                    height: YConfigs.Popups.DefaultPopupHeight,\r\n                    draggable: true,\r\n                    iframe: true,\r\n                    modal: true,\r\n                    resizable: false,\r\n                    title: \" \", //title is set later once contents are available\r\n                    visible: false,\r\n                    content: url as kendo.ui.WindowContent, //Hello, this is not really WindowContent, but d.ts needs WindowContent\r\n                    close: (e: kendo.ui.WindowCloseEvent): void => {\r\n                        var popup: kendo.ui.Window | null = $popupwin.data(\"kendoWindow\");\r\n                        popup.destroy();\r\n                        popup = null;\r\n                        document.YPopupWindowActive = null;\r\n                        YVolatile.Basics.IsInPopup = false;\r\n                    },\r\n                    animation: false,\r\n                    refresh: (e: kendo.ui.WindowEvent): void => { // page complete\r\n                        var iframeDomElement: HTMLIFrameElement | null = $popupwin.children(\"iframe\")[0] as HTMLIFrameElement;\r\n                        if (iframeDomElement && iframeDomElement.contentDocument && popup) {\r\n                            var iframeDocumentObject: Document = iframeDomElement.contentDocument;\r\n                            popup.title(iframeDocumentObject.title);\r\n                        }\r\n                        $YetaWF.setLoading(false);\r\n                    },\r\n                    error: (e: kendo.ui.WindowErrorEvent): void => {\r\n                        $YetaWF.setLoading(false);\r\n                        $YetaWF.error(\"Request failed with status \" + e.status);\r\n                    }\r\n                });\r\n\r\n                // show and center the window\r\n                popup = $popupwin.data(\"kendoWindow\");\r\n                //do not open the window here - the loaded content opens it because it knows the desired size\r\n                //popup.center().open();\r\n\r\n                // mark that a popup is active\r\n                (document as any).expando = true;\r\n                document.YPopupWindowActive = popup;\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:variable-name\r\nvar YetaWF_PopupsImpl: YetaWF.IPopupsImpl = new YetaWF_ComponentsHTML.PopupsImpl();\r\n\r\n"]}