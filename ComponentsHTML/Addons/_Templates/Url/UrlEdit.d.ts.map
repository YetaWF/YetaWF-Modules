{"version":3,"sources":["Addons/YetaWF/ComponentsHTML/_Templates/Url/UrlEdit.ts"],"names":[],"mappings":"AAEA,kBAAU,qBAAqB,CAAC;IAE5B,UAAU,YAAY;QAClB,IAAI,EAAE,WAAW,CAAC;QAClB,GAAG,EAAE,MAAM,CAAC;KACf;IACD,KAAK,WAAW;QACZ,KAAK,IAAI;QACT,MAAM,IAAI;KACb;IACD,MAAa,gBAAiB,SAAQ,MAAM,CAAC,qBAAqB;QAE9D,gBAAuB,QAAQ,EAAE,MAAM,CAAoB;QAE3D,OAAO,CAAC,KAAK,CAAe;QAC5B,OAAO,CAAC,WAAW,CAAmB;QACtC,OAAO,CAAC,UAAU,CAAkD;QACpE,OAAO,CAAC,UAAU,CAAgE;QAClF,OAAO,CAAC,QAAQ,CAAiC;QACjD,OAAO,CAAC,QAAQ,CAA+B;QAC/C,OAAO,CAAC,SAAS,CAA+B;QAChD,OAAO,CAAC,KAAK,CAAoB;oBAErB,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY;QAqClD,OAAO,CAAC,YAAY;QA+ChB,KAAK,EAAI,MAAM;QAkCZ,KAAK,IAAI,IAAI;QAGb,MAAM,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI;KAOxC;CAMJ","file":"UrlEdit.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/ComponentsHTML#License */\r\n\r\nnamespace YetaWF_ComponentsHTML {\r\n\r\n    interface UrlEditSetup {\r\n        Type: UrlTypeEnum;\r\n        Url: string;\r\n    }\r\n    enum UrlTypeEnum {//flags\r\n        Local = 1, // Local Url starting with /\r\n        Remote = 2, // Remote Url http:// https:// or /\r\n    }\r\n    export class UrlEditComponent extends YetaWF.ComponentBaseDataImpl {\r\n\r\n        public static readonly SELECTOR: string = \".yt_url.t_edit\";\r\n\r\n        private Setup: UrlEditSetup;\r\n        private inputHidden: HTMLInputElement;\r\n        private selectType: YetaWF_ComponentsHTML.DropDownListEditComponent;\r\n        private selectPage: YetaWF_ComponentsHTML.DropDownListEditComponent | null = null;\r\n        private inputUrl: HTMLInputElement | null = null;\r\n        private divLocal: HTMLDivElement | null = null;\r\n        private divRemote: HTMLDivElement | null = null;\r\n        private aLink: HTMLAnchorElement;\r\n\r\n        constructor(controlId: string, setup: UrlEditSetup) {\r\n            super(controlId);\r\n            this.Setup = setup;\r\n\r\n            this.inputHidden = $YetaWF.getElement1BySelector(\".t_hidden\", [this.Control]) as HTMLInputElement;\r\n\r\n            this.selectType = YetaWF.ComponentBaseDataImpl.getControlFromSelector(\"select.yt_urltype\", DropDownListEditComponent.SELECTOR, [this.Control]);\r\n            // tslint:disable-next-line:no-bitwise\r\n            if (this.Setup.Type & UrlTypeEnum.Local) {\r\n                this.selectPage = YetaWF.ComponentBaseDataImpl.getControlFromSelector<DropDownListEditComponent>(\"select.yt_urldesignedpage\", DropDownListEditComponent.SELECTOR, [this.Control]);\r\n                this.divLocal = $YetaWF.getElement1BySelector(\".t_local\", [this.Control]) as HTMLDivElement;\r\n            }\r\n            // tslint:disable-next-line:no-bitwise\r\n            if (this.Setup.Type & UrlTypeEnum.Remote) {\r\n                this.inputUrl = $YetaWF.getElement1BySelector(\".yt_urlremotepage\", [this.Control]) as HTMLInputElement;\r\n                this.divRemote = $YetaWF.getElement1BySelector(\".t_remote\", [this.Control]) as HTMLDivElement;\r\n            }\r\n            this.aLink = $YetaWF.getElement1BySelector(\".t_link a\", [this.Control]) as HTMLAnchorElement;\r\n\r\n            this.value = this.Setup.Url;\r\n\r\n            if (!this.inputUrl || !this.selectPage)\r\n                this.selectType.enable(false);\r\n\r\n            this.selectType.Control.addEventListener(\"dropdownlist_change\", (evt: Event): void => {\r\n                this.updateStatus();\r\n            });\r\n            if (this.selectPage) {\r\n                this.selectPage.Control.addEventListener(\"dropdownlist_change\", (evt: Event): void => {\r\n                    this.updateStatus();\r\n                });\r\n            }\r\n            if (this.inputUrl) {\r\n                $YetaWF.registerMultipleEventHandlers([this.inputUrl], [\"input\", \"change\", \"click\", \"keyup\", \"paste\"], null, (ev: Event): boolean => { this.updateStatus(); return true; });\r\n            }\r\n        }\r\n\r\n        private updateStatus(): void {\r\n            var tp = Number(this.selectType.value) as UrlTypeEnum;\r\n            var oldValue = this.inputHidden.value;\r\n            switch (tp) {\r\n                case UrlTypeEnum.Local:\r\n                    if (this.divLocal)\r\n                        this.divLocal.style.display = \"\";\r\n                    if (this.divRemote)\r\n                        this.divRemote.style.display = \"none\";\r\n                    if (this.selectPage)\r\n                        this.inputHidden.value = this.selectPage.value.trim();\r\n                    break;\r\n                case UrlTypeEnum.Remote:\r\n                    if (this.divLocal)\r\n                        this.divLocal.style.display = \"none\";\r\n                    if (this.divRemote)\r\n                        this.divRemote.style.display = \"\";\r\n                    if (this.inputUrl)\r\n                        this.inputHidden.value = this.inputUrl.value.trim();\r\n                    break;\r\n            }\r\n\r\n            var url = this.inputHidden.value.trim();\r\n            if (url && url.length > 0) {\r\n                if (tp === UrlTypeEnum.Local) {\r\n                    var uri = $YetaWF.parseUrl(url);\r\n                    uri.removeSearch(YConfigs.Basics.Link_NoEditMode);\r\n                    uri.addSearch(YConfigs.Basics.Link_NoEditMode, \"y\");\r\n                    this.aLink.href = uri.toUrl();\r\n                } else {\r\n                    this.aLink.href = url;\r\n                }\r\n                this.aLink.style.display = \"\";\r\n            } else {\r\n                this.aLink.href = \"\";\r\n                this.aLink.style.display = \"none\";\r\n            }\r\n\r\n            if (oldValue !== url) {\r\n                var event = document.createEvent(\"Event\");\r\n                event.initEvent(\"url_change\", true, true);\r\n                this.Control.dispatchEvent(event);\r\n            }\r\n        }\r\n\r\n        // API\r\n\r\n        get value(): string {\r\n            return this.inputHidden.value;\r\n        }\r\n        set value(url: string) {\r\n            var sel = Number(this.selectType.value) as UrlTypeEnum;// current selection\r\n            if (this.Setup.Type === UrlTypeEnum.Local + UrlTypeEnum.Remote && this.selectPage) {\r\n                if (url != null && (url.startsWith(\"//\") || url.startsWith(\"http\"))) {\r\n                    // remote\r\n                    if (this.inputUrl)\r\n                        sel = UrlTypeEnum.Remote;\r\n                } else {\r\n                    // try local\r\n                    this.selectPage.value = url;\r\n                    if (this.selectPage.value !== url)\r\n                        sel = UrlTypeEnum.Remote;// have to use remote as there was no match in the designed pages\r\n                    else\r\n                        sel = UrlTypeEnum.Local;\r\n                }\r\n            } else if (this.Setup.Type === UrlTypeEnum.Local && this.selectPage) {\r\n                sel = UrlTypeEnum.Local;\r\n            } else {\r\n                sel = UrlTypeEnum.Remote;\r\n            }\r\n            this.inputHidden.value = url;\r\n            this.selectType.value = sel.toString();\r\n\r\n            if (sel === UrlTypeEnum.Local && this.selectPage) {\r\n                this.selectPage.value = url;\r\n            } else if (sel === UrlTypeEnum.Remote && this.inputUrl) {\r\n                this.inputUrl.value = url;\r\n            }\r\n            this.updateStatus();\r\n        }\r\n\r\n        public clear(): void {\r\n            this.value = \"\";\r\n        }\r\n        public enable(enabled: boolean): void {\r\n            this.selectType.enable(enabled);\r\n            if (this.selectPage)\r\n                this.selectPage.enable(enabled);\r\n            if (this.inputUrl)\r\n                $YetaWF.elementEnableToggle(this.inputUrl, enabled);\r\n        }\r\n    }\r\n\r\n    // A <div> is being emptied. Destroy all controls the <div> may contain.\r\n    $YetaWF.registerClearDiv((tag: HTMLElement): void => {\r\n        UrlEditComponent.clearDiv(tag, UrlEditComponent.SELECTOR);\r\n    });\r\n}\r\n\r\n"]}