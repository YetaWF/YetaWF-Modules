{"version":3,"sources":["AddOns/YetaWF/ComponentsHTML/_Templates/FileUpload1/FileUpload1.ts"],"names":[],"mappings":"AAEA,kBAAU,qBAAqB,CAAC;IAE5B,UAAiB,YAAY;QACzB,kBAAkB,EAAE,MAAM,CAAC;QAC3B,kBAAkB,EAAE,MAAM,CAAC;QAC3B,aAAa,EAAE,MAAM,CAAC;QACtB,aAAa,EAAE,MAAM,CAAC;QACtB,YAAY,EAAE,MAAM,CAAC;KACxB;IAED,UAAU,gBAAgB;QACtB,OAAO,EAAE,MAAM,CAAC;QAChB,SAAS,EAAE,MAAM,CAAC;QAClB,aAAa,EAAE,OAAO,CAAC;KAC1B;IAED,UAAiB,kBAAkB;QAC/B,MAAM,EAAE,MAAM,CAAC;QACf,QAAQ,EAAE,MAAM,CAAC;QACjB,aAAa,EAAE,MAAM,CAAC;QACtB,YAAY,EAAE,MAAM,CAAC;QACrB,UAAU,EAAE,MAAM,CAAC;QACnB,IAAI,EAAE,MAAM,CAAC;KAChB;IACD,UAAiB,wBAAwB;QACrC,MAAM,EAAE,MAAM,CAAC;QACf,IAAI,EAAE,MAAM,CAAC;KAChB;IAED,MAAa,oBAAqB,SAAQ,MAAM,CAAC,qBAAqB;QAElE,gBAAuB,QAAQ,EAAE,MAAM,CAAqB;QAE5D,OAAO,CAAC,KAAK,CAAmB;QAChC,OAAO,CAAC,QAAQ,CAAsB;QACtC,OAAO,CAAC,aAAa,CAAmB;QACxC,OAAO,CAAC,cAAc,CAAiB;QACvC,OAAO,CAAC,eAAe,CAAoC;QAE3D,OAAO,CAAC,yBAAyB,CAAqD;QACtF,OAAO,CAAC,mBAAmB,CAA+B;oBAE9C,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB;QAgH/C,UAAU,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI;QAY9B,oBAAoB,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,kBAAkB,KAAK,IAAI,GAAG,IAAI;QAGxE,cAAc,CAAC,QAAQ,EAAE,MAAM,MAAM,GAAG,IAAI;KAGtD;CAMJ","file":"FileUpload1.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/ComponentsHTML#License */\r\n\r\nnamespace YetaWF_ComponentsHTML {\r\n\r\n    export interface IPackageLocs {\r\n        StatusUploadNoResp: string;\r\n        StatusUploadFailed: string;\r\n        FileTypeError: string;\r\n        FileSizeError: string;\r\n        FallbackMode: string;\r\n    }\r\n\r\n    interface FileUpload1Setup {\r\n        SaveUrl: string;\r\n        RemoveUrl: string;\r\n        SerializeForm: boolean;\r\n    }\r\n\r\n    export interface FileUploadResponse {\r\n        Result: string;\r\n        FileName: string;\r\n        FileNamePlain: string;\r\n        RealFileName: string;\r\n        Attributes: string;\r\n        List: string;\r\n    }\r\n    export interface FileUploadRemoveResponse {\r\n        Result: string;\r\n        List: string;\r\n    }\r\n\r\n    export class FileUpload1Component extends YetaWF.ComponentBaseDataImpl {\r\n\r\n        public static readonly SELECTOR: string = \".yt_fileupload1\";\r\n\r\n        private Setup: FileUpload1Setup;\r\n        private $Control: JQuery<HTMLElement>;\r\n        private inputFileName: HTMLInputElement;\r\n        private divProgressbar: HTMLDivElement;\r\n        private $divProgressbar: JQuery<HTMLElement> | null = null;\r\n\r\n        private SuccessfullUploadCallback: ((data: FileUploadResponse) => void) | null = null;\r\n        private GetFileNameCallback: (() => string) | null = null;\r\n\r\n        constructor(controlId: string, setup: FileUpload1Setup) {\r\n            super(controlId);\r\n            this.Setup = setup;\r\n\r\n            ComponentsHTMLHelper.MUSTHAVE_JQUERYUI();\r\n\r\n            this.inputFileName = $YetaWF.getElement1BySelector(\"input.t_filename\", [this.Control]) as HTMLInputElement;\r\n            this.divProgressbar = $YetaWF.getElement1BySelectorCond(\".t_progressbar\", [this.Control]) as HTMLDivElement;\r\n            if (this.divProgressbar) {\r\n                this.$divProgressbar = $(this.divProgressbar);\r\n                this.$divProgressbar.progressbar({\r\n                    max: 100,\r\n                    value: 0,\r\n                });\r\n                this.$divProgressbar.hide();\r\n            }\r\n\r\n            this.$Control = $(this.Control);\r\n\r\n            // trigger upload button\r\n            $YetaWF.registerEventHandler(this.Control, \"click\", \".t_upload\", (ev: MouseEvent): boolean => {\r\n                $(this.inputFileName).trigger(\"click\");\r\n                return false;\r\n            });\r\n\r\n            // Uploader control\r\n            (this.$Control as any).dmUploader({\r\n                url: this.Setup.SaveUrl,\r\n                //dataType: 'json',  //don't use otherwise response is not recognized in case of errors\r\n                //allowedTypes: '*',\r\n                //extFilter: 'jpg,png,gif',\r\n                fileName: \"__filename\",\r\n                onInit: (): void => { },\r\n                onBeforeUpload: (id: string): void => {\r\n                    $YetaWF.setLoading(true);\r\n                },\r\n                onExtraData: (id: string, data: any): void => {\r\n                    if (this.GetFileNameCallback) {\r\n                        var filename = this.GetFileNameCallback();\r\n                        data.append(\"__lastInternalName\", filename);// the previous real filename of the file to remove\r\n                    }\r\n                    if (this.Setup.SerializeForm) {\r\n                        var form = $YetaWF.Forms.getForm(this.Control);\r\n                        var formData = $YetaWF.Forms.serializeFormArray(form);\r\n                        for (let f of formData) {\r\n                            data.append(f.name, f.value);\r\n                        }\r\n                    }\r\n                },\r\n                onNewFile: (id: string, file: string): void => {\r\n                    console.log(`onNewFile #${id} ${file}`);\r\n                },\r\n                onComplete: (): void => {\r\n                    if (this.$divProgressbar)\r\n                        this.$divProgressbar.hide();\r\n                },\r\n                onUploadProgress: (id: string, percent: string): void => {\r\n                    if (this.$divProgressbar) {\r\n                        this.$divProgressbar.show();\r\n                        this.$divProgressbar.progressbar(\"value\", percent); //jQuery-ui use\r\n                    }\r\n                },\r\n                onUploadError: (id: string, message: string): void => {\r\n                    $YetaWF.setLoading(false);\r\n                    if (message === \"\")\r\n                        $YetaWF.error(YLocs.YetaWF_ComponentsHTML.StatusUploadNoResp);\r\n                    else\r\n                        $YetaWF.error(YLocs.YetaWF_ComponentsHTML.StatusUploadFailed.format(message));\r\n                },\r\n                onFileTypeError: (file: string): void => {\r\n                    $YetaWF.error(YLocs.YetaWF_ComponentsHTML.FileTypeError);\r\n                },\r\n                onFileSizeError: (file: string): void => {\r\n                    $YetaWF.error(YLocs.YetaWF_ComponentsHTML.FileSizeError);\r\n                },\r\n                onFallbackMode: (message: string): void => {\r\n                    $YetaWF.error(YLocs.YetaWF_ComponentsHTML.FallbackMode);\r\n                },\r\n                onUploadSuccess: (id: string, data: any): void => {\r\n                    //{\r\n                    //    \"result\":      \"$YetaWF.confirm(\\\"Image \\\\\\\"logo_233x133.jpg\\\\\\\" successfully uploaded\\\");\",\r\n                    //    \"filename\": \"tempc8eb1eb6-31ef-4e5d-9100-9fab50761a81.jpg\",\r\n                    //    \"realFilename\": \"logo_233x133.jpg\",\r\n                    //    \"attributes\": \"233 x 123 (w x h)\"\r\n                    //}\r\n                    $YetaWF.setLoading(false);\r\n                    if (typeof data === \"string\") {\r\n                        if (data.startsWith(YConfigs.Basics.AjaxJavascriptReturn)) {\r\n                            var script = data.substring(YConfigs.Basics.AjaxJavascriptReturn.length);\r\n                            // tslint:disable-next-line:no-eval\r\n                            eval(script);\r\n                            return;\r\n                        }\r\n                        if (data.startsWith(YConfigs.Basics.AjaxJavascriptErrorReturn)) {\r\n                            var script = data.substring(YConfigs.Basics.AjaxJavascriptErrorReturn.length);\r\n                            // tslint:disable-next-line:no-eval\r\n                            eval(script);\r\n                            return;\r\n                        }\r\n                        throw `Unexpected return value ${data}`;\r\n                    }\r\n                    // result has quotes around it\r\n                    if (this.SuccessfullUploadCallback)\r\n                        this.SuccessfullUploadCallback(data);\r\n\r\n                    // tslint:disable-next-line:no-eval\r\n                    eval(data.Result);\r\n                },\r\n            });\r\n        }\r\n\r\n        // API\r\n        public RemoveFile(name: string): void {\r\n            $.ajax({\r\n                url: this.Setup.RemoveUrl,\r\n                type: \"post\",\r\n                data: \"__internalName=\" + encodeURIComponent(name) + \"&__filename=\" + encodeURIComponent(name),\r\n                success: (result: any, textStatus: string, jqXHR: JQueryXHR): void => { },\r\n                error: (jqXHR: JQueryXHR, textStatus: string, errorThrown: any): void => {\r\n                    $YetaWF.alert(YLocs.Forms.AjaxError.format(jqXHR.status, jqXHR.statusText), YLocs.Forms.AjaxErrorTitle);\r\n                }\r\n            });\r\n        }\r\n\r\n        public SetSuccessfullUpload(callback: (data: FileUploadResponse) => void): void {\r\n            this.SuccessfullUploadCallback = callback;\r\n        }\r\n        public SetGetFileName(callback: () => string): void {\r\n            this.GetFileNameCallback = callback;\r\n        }\r\n    }\r\n\r\n    // A <div> is being emptied. Destroy all controls the <div> may contain.\r\n    $YetaWF.registerClearDiv((tag: HTMLElement): void => {\r\n        YetaWF.ComponentBaseDataImpl.clearDiv<FileUpload1Component>(tag, FileUpload1Component.SELECTOR);\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}