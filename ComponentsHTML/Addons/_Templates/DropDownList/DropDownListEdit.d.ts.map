{"version":3,"sources":["Addons/YetaWF/ComponentsHTML/_Templates/DropDownList/DropDownListEdit.ts"],"names":[],"mappings":"AAEA,kBAAU,qBAAqB,CAAC;IAE5B,UAAU,qBAAqB;QAC3B,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAC1B,WAAW,EAAE,OAAO,CAAC;KACxB;IAOD,MAAa,yBAA0B,SAAQ,MAAM,CAAC,qBAAqB;QAEvE,gBAAuB,QAAQ,EAAE,MAAM,CAAgD;QAEvF,OAAO,CAAC,KAAK,CAAwB;QACrC,OAAO,CAAC,iBAAiB,CAAsC;oBAEnD,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,qBAAqB;QAOpD,WAAW,IAAI,IAAI;QAmBtB,KAAK,EAAI,MAAM;iBAYf,aAAa,EAAI,MAAM;QAMpB,UAAU,CAAC,KAAK,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI;QAKxC,KAAK,IAAI,IAAI;QAOb,MAAM,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI;QAO9B,eAAe,IAAI,IAAI;QAOvB,eAAe,IAAI,IAAI;QAQvB,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,KAAK,IAAI,GAAG,IAAI;KA6C7H;CA+BJ","file":"DropDownListEdit.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/ComponentsHTML#License */\r\n\r\nnamespace YetaWF_ComponentsHTML {\r\n\r\n    interface DropDownListEditSetup {\r\n        ToolTips: string[] | null;\r\n        AdjustWidth: boolean;\r\n    }\r\n\r\n    interface AjaxData {\r\n        data: kendo.data.DataSource;\r\n        tooltips: string[] | null;\r\n    }\r\n\r\n    export class DropDownListEditComponent extends YetaWF.ComponentBaseDataImpl {\r\n\r\n        public static readonly SELECTOR: string = \"select.yt_dropdownlist_base.t_edit.t_kendo\";\r\n\r\n        private Setup: DropDownListEditSetup;\r\n        private KendoDropDownList: kendo.ui.DropDownList | null = null;\r\n\r\n        constructor(controlId: string, setup: DropDownListEditSetup) {\r\n            super(controlId);\r\n            this.Setup = setup;\r\n\r\n            this.updateWidth();\r\n        }\r\n\r\n        public updateWidth(): void {\r\n            var w = this.Control.clientWidth;\r\n            if (w > 0 && this.KendoDropDownList == null) {\r\n                $(this.Control).kendoDropDownList({\r\n                    autoWidth: true,\r\n                    change: (): void => {\r\n                        this.sendChangeEvent();\r\n                    }\r\n                });\r\n                this.KendoDropDownList = $(this.Control).data(\"kendoDropDownList\");\r\n\r\n                if (this.Setup.AdjustWidth) {\r\n                    var avgw = Number($YetaWF.getAttribute(this.Control, \"data-charavgw\"));\r\n                    var container = $YetaWF.elementClosest(this.Control, \".k-widget.yt_dropdownlist,.k-widget.yt_dropdownlist_base,.k-widget.yt_enum\");\r\n                    $(container).width(w + 3 * avgw);\r\n                }\r\n            }\r\n        }\r\n\r\n        get value(): string {\r\n            return (this.Control as HTMLSelectElement).value;\r\n        }\r\n        set value(val: string) {\r\n            if (this.KendoDropDownList == null) {\r\n                (this.Control as HTMLSelectElement).value = val;\r\n            } else {\r\n                this.KendoDropDownList.value(val);\r\n                if (this.KendoDropDownList.select() < 0)\r\n                    this.KendoDropDownList.select(0);\r\n            }\r\n        }\r\n        get selectedIndex(): number {\r\n            if (this.KendoDropDownList == null) return -1;\r\n            return this.KendoDropDownList.select();\r\n        }\r\n\r\n        // retrieve the tooltip for the nth item (index) in the dropdown list\r\n        public getToolTip(index: number): string | null {\r\n            if (!this.Setup.ToolTips) return null;\r\n            if (index < 0 || index >= this.Setup.ToolTips.length) return null;\r\n            return this.Setup.ToolTips[index];\r\n        }\r\n        public clear(): void {\r\n            if (this.KendoDropDownList == null) {\r\n                (this.Control as HTMLSelectElement).selectedIndex = 0;\r\n            } else {\r\n                this.KendoDropDownList.select(0);\r\n            }\r\n        }\r\n        public enable(enabled: boolean): void {\r\n            if (this.KendoDropDownList == null) {\r\n                $YetaWF.elementEnableToggle(this.Control, enabled);\r\n            } else {\r\n                this.KendoDropDownList.enable(enabled);\r\n            }\r\n        }\r\n        public sendChangeEvent(): void {\r\n            $(this.Control).trigger(\"change\");\r\n            var event = document.createEvent(\"Event\");\r\n            event.initEvent(\"dropdownlist_change\", true, true);\r\n            this.Control.dispatchEvent(event);\r\n            FormsSupport.validateElement(this.Control);\r\n        }\r\n        public internalDestroy(): void {\r\n            try {\r\n                if (this.KendoDropDownList)\r\n                    this.KendoDropDownList.destroy();\r\n            } catch(e) { }\r\n            this.KendoDropDownList = null;\r\n        }\r\n\r\n        public ajaxUpdate(data: any, ajaxUrl: string, onSuccess?: (data: any) => void, onFailure?: (result: string) => void): void {\r\n\r\n            $YetaWF.setLoading(true);\r\n\r\n            var uri = $YetaWF.parseUrl(ajaxUrl);\r\n            uri.addSearchSimpleObject(data);\r\n\r\n            var request: XMLHttpRequest = new XMLHttpRequest();\r\n            request.open(\"POST\", ajaxUrl);\r\n            request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n            request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            request.onreadystatechange = (ev: Event): any => {\r\n                if (request.readyState === 4 /*DONE*/) {\r\n                    $YetaWF.setLoading(false);\r\n                    var retVal = $YetaWF.processAjaxReturn(request.responseText, request.statusText, request, this.Control, undefined, undefined, (data: AjaxData): void => {\r\n\r\n                        // $(this.Control).val(null);\r\n                        $(this.Control).kendoDropDownList({\r\n                            dataTextField: \"t\",\r\n                            dataValueField: \"v\",\r\n                            dataSource: data.data,\r\n                            autoWidth: true,\r\n                            change: (): void => {\r\n                                this.sendChangeEvent();\r\n                            }\r\n                        });\r\n                        this.Setup.ToolTips = data.tooltips;\r\n                        this.KendoDropDownList = $(this.Control).data(\"kendoDropDownList\");\r\n\r\n                        if (onSuccess) {\r\n                            onSuccess(data);\r\n                        } else {\r\n                            this.value = \"\";\r\n                            this.sendChangeEvent();\r\n                        }\r\n                    });\r\n                    if (!retVal) {\r\n                        if (onFailure)\r\n                            onFailure(request.responseText);\r\n                        throw \"Unexpected data returned\";\r\n                    }\r\n                }\r\n            };\r\n            request.send(uri.toFormData());\r\n        }\r\n    }\r\n\r\n    // We need to delay initialization until divs become visible so we can calculate the dropdown width\r\n    $YetaWF.registerActivateDiv((tag: HTMLElement): void => {\r\n        var ctls = $YetaWF.getElementsBySelector(DropDownListEditComponent.SELECTOR, [tag]);\r\n        for (let ctl of ctls) {\r\n            var control: DropDownListEditComponent = YetaWF.ComponentBaseDataImpl.getControlFromTag(ctl, DropDownListEditComponent.SELECTOR);\r\n            control.updateWidth();\r\n        }\r\n    });\r\n\r\n    // A <div> is being emptied. Destroy all dropdownlists the <div> may contain.\r\n    $YetaWF.registerClearDiv((tag: HTMLElement): void => {\r\n        YetaWF.ComponentBaseDataImpl.clearDiv<DropDownListEditComponent>(tag, DropDownListEditComponent.SELECTOR, (control: DropDownListEditComponent): void => {\r\n            control.internalDestroy();\r\n        });\r\n    });\r\n\r\n    // handle submit/apply\r\n    $YetaWF.registerCustomEventHandlerDocument(\"dropdownlist_change\", \".ysubmitonchange .k-dropdown select.yt_dropdownlist_base\", (ev: Event): boolean => {\r\n        $YetaWF.Forms.submitOnChange(ev.target as HTMLElement);\r\n        return false;\r\n    });\r\n    $YetaWF.registerCustomEventHandlerDocument(\"dropdownlist_change\", \".yapplyonchange .k-dropdown select.yt_dropdownlist_base\", (ev: Event): boolean => {\r\n        $YetaWF.Forms.applyOnChange(ev.target as HTMLElement);\r\n        return false;\r\n    });\r\n    $YetaWF.registerCustomEventHandlerDocument(\"dropdownlist_change\", \".yreloadonchange .k-dropdown select.yt_dropdownlist_base\", (ev: Event): boolean => {\r\n        $YetaWF.Forms.reloadOnChange(ev.target as HTMLElement);\r\n        return false;\r\n    });\r\n}\r\n\r\n"]}