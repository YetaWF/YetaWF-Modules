{"version":3,"sources":["AddOns/YetaWF/ComponentsHTML/_Main/ComponentsHTML.ts"],"names":[],"mappings":"AAEA,kBAAU,MAAM,CAAC;IACb,UAAiB,SAAS;QACtB,qBAAqB,EAAE,qBAAqB,CAAC,iBAAiB,CAAC;KAClE;IACD,UAAiB,QAAQ;QACrB,qBAAqB,EAAE,qBAAqB,CAAC,eAAe,CAAC;KAChE;CACJ;AACD,kBAAU,qBAAqB,CAAC;IAC5B,UAAiB,iBAAiB;KAEjC;IACD,UAAiB,eAAe;KAE/B;CACJ;AAED,kBAAU,qBAAqB,CAAC;IAE5B,UAAiB,wBAAwB;QACrC,QAAQ,CAAC,GAAG,EAAE,WAAW,GAAG,IAAI,CAAC;KACpC;IAED,MAAa,cAAc;QAMvB,OAAO,CAAC,2BAA2B,CAAkC;QAErE;;WAEG;QACI,2BAA2B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,WAAW,KAAK,IAAI,GAAG,IAAI;QAG9E;;WAEG;QACI,0BAA0B,CAAC,GAAG,EAAE,WAAW,GAAG,IAAI;QAUlD,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,MAAM,GAAI,IAAI;QAqB5C,OAAO,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,MAAM,GAAI,IAAI;KAoBvD;CACJ;AAED,QAAA,IAAI,oBAAoB,sCAA6C,CAAC","file":"ComponentsHTML.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/ComponentsHTML#License */\r\n\r\nnamespace YetaWF {\r\n    export interface IVolatile {\r\n        YetaWF_ComponentsHTML: YetaWF_ComponentsHTML.IPackageVolatiles;\r\n    }\r\n    export interface IConfigs {\r\n        YetaWF_ComponentsHTML: YetaWF_ComponentsHTML.IPackageConfigs;\r\n    }\r\n}\r\nnamespace YetaWF_ComponentsHTML {\r\n    export interface IPackageVolatiles {\r\n\r\n    }\r\n    export interface IPackageConfigs {\r\n\r\n    }\r\n}\r\n\r\nnamespace YetaWF_ComponentsHTML {\r\n\r\n    export interface PropertyListVisibleEntry {\r\n        callback(tag: HTMLElement): void;\r\n    }\r\n\r\n    export class ComponentsHTML {\r\n\r\n        // PropertyListVisible\r\n        // PropertyListVisible\r\n        // PropertyListVisible\r\n\r\n        private PropertyListVisibleHandlers: PropertyListVisibleEntry[] = [];\r\n\r\n        /**\r\n         * Register a callback to be called when a propertylist become visible.\r\n         */\r\n        public registerPropertyListVisible(callback: (tag: HTMLElement) => void): void {\r\n            this.PropertyListVisibleHandlers.push({ callback: callback });\r\n        }\r\n        /**\r\n         * Called to call all registered callbacks when a propertylist become visible.\r\n         */\r\n        public processPropertyListVisible(tag: HTMLElement): void {\r\n            for (const entry of this.PropertyListVisibleHandlers) {\r\n                entry.callback(tag);\r\n            }\r\n        }\r\n\r\n        // Fade in/out\r\n        // Fade in/out\r\n        // Fade in/out\r\n\r\n        public fadeIn(elem: HTMLElement, ms: number) : void {\r\n\r\n            elem.style.opacity = \"0\";\r\n\r\n            if (ms) {\r\n                var opacity = 0;\r\n                elem.style.display = \"block\";\r\n                this.processPropertyListVisible(elem);\r\n                const timer = setInterval(() => {\r\n                    opacity += 50 / ms;\r\n                    if (opacity >= 1) {\r\n                        clearInterval(timer);\r\n                        opacity = 1;\r\n                    }\r\n                    elem.style.opacity = opacity.toString();\r\n                }, 50);\r\n            } else {\r\n                elem.style.opacity = \"1\";\r\n            }\r\n        }\r\n\r\n        public fadeOut(elem: HTMLElement, ms: number) : void {\r\n\r\n            elem.style.opacity = \"1\";\r\n\r\n            if (ms) {\r\n                var opacity = 1;\r\n                const timer = setInterval(() => {\r\n                    opacity -= 50 / ms;\r\n                    if (opacity <= 0) {\r\n                        clearInterval(timer);\r\n                        opacity = 0;\r\n                        elem.style.display = \"none\";\r\n                        this.processPropertyListVisible(elem);\r\n                    }\r\n                    elem.style.opacity = opacity.toString();\r\n                }, 50);\r\n            } else {\r\n                elem.style.opacity = \"0\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar ComponentsHTMLHelper = new YetaWF_ComponentsHTML.ComponentsHTML();"]}